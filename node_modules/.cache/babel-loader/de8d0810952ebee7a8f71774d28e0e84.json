{"ast":null,"code":"/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nimport { LogLevel } from \"@azure/msal-browser\";\n/**tenant\r\n * Enter here the user flows and custom policies for your B2C application\r\n * To learn more about user flows, visit: https://docs.microsoft.com/en-us/azure/active-directory-b2c/user-flow-overview\r\n * To learn more about custom policies, visit: https://docs.microsoft.com/en-us/azure/active-directory-b2c/custom-policy-overview\r\n */\n\nexport const b2cPolicies = {\n  names: {\n    signUpSignIn: \"B2C_1_t20signupsignin\",\n    forgotPassword: \"b2c_1_reset\",\n    editProfile: \"b2c_1_edit_profile\"\n  },\n  authorities: {\n    signUpSignIn: {\n      authority: \"https://t20b2c.b2clogin.com/t20b2c.onmicrosoft.com/B2C_1_t20signupsignin\"\n    },\n    forgotPassword: {\n      authority: \"https://t20b2c.b2clogin.com/t20b2c.onmicrosoft.com/b2c_1_reset\"\n    },\n    editProfile: {\n      authority: \"https://t20b2c.b2clogin.com/t20b2c.onmicrosoft.com/b2c_1_edit_profile\"\n    }\n  },\n  authorityDomain: \"t20b2c.b2clogin.com\"\n};\n/**\r\n * Configuration object to be passed to MSAL instance on creation. \r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \r\n */\n\nexport const msalConfig = {\n  auth: {\n    clientId: \"dfc41c62-bb90-4d3b-adc2-b837b9569f71\",\n    // This is the ONLY mandatory field that you need to supply.\n    authority: b2cPolicies.authorities.signUpSignIn.authority,\n    // Use a sign-up/sign-in user-flow as a default authority\n    knownAuthorities: [b2cPolicies.authorityDomain],\n    // Mark your B2C tenant's domain as trusted.\n    redirectUri: \"/\",\n    // Points to window.location.origin. You must register this URI on Azure Portal/App Registration.\n    postLogoutRedirectUri: \"/\",\n    // Indicates the page to navigate after logout.\n    navigateToLoginRequestUrl: false // If \"true\", will navigate back to the original request location before processing the auth code response.\n\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\",\n    // Configures cache location. \"sessionStorage\" is more secure, but \"localStorage\" gives you SSO between tabs.\n    storeAuthStateInCookie: false // Set this to \"true\" if you are having issues on IE11 or Edge\n\n  },\n  system: {\n    loggerOptions: {\n      loggerCallback: (level, message, containsPii) => {\n        if (containsPii) {\n          return;\n        }\n\n        switch (level) {\n          case LogLevel.Error:\n            console.error(message);\n            return;\n\n          case LogLevel.Info:\n            console.info(message);\n            return;\n\n          case LogLevel.Verbose:\n            console.debug(message);\n            return;\n\n          case LogLevel.Warning:\n            console.warn(message);\n            return;\n        }\n      }\n    }\n  }\n};\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit: \r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\n\nexport const loginRequest = {\n  scopes: []\n};\n/**\r\n * An optional silentRequest object can be used to achieve silent SSO\r\n * between applications by providing a \"login_hint\" property.\r\n */\n\nexport const silentRequest = {\n  scopes: [\"openid\", \"profile\"],\n  loginHint: \"example@domain.net\"\n};","map":{"version":3,"names":["LogLevel","b2cPolicies","names","signUpSignIn","forgotPassword","editProfile","authorities","authority","authorityDomain","msalConfig","auth","clientId","knownAuthorities","redirectUri","postLogoutRedirectUri","navigateToLoginRequestUrl","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","silentRequest","loginHint"],"sources":["C:/Users/ashwinse/Desktop/T20/t20/src/authConfig.js"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { LogLevel } from \"@azure/msal-browser\";\r\n\r\n/**tenant\r\n * Enter here the user flows and custom policies for your B2C application\r\n * To learn more about user flows, visit: https://docs.microsoft.com/en-us/azure/active-directory-b2c/user-flow-overview\r\n * To learn more about custom policies, visit: https://docs.microsoft.com/en-us/azure/active-directory-b2c/custom-policy-overview\r\n */\r\nexport const b2cPolicies = {\r\n    names: {\r\n        signUpSignIn: \"B2C_1_t20signupsignin\",\r\n        forgotPassword: \"b2c_1_reset\",\r\n        editProfile: \"b2c_1_edit_profile\"\r\n    },\r\n    authorities: {\r\n        signUpSignIn: {\r\n            authority: \"https://t20b2c.b2clogin.com/t20b2c.onmicrosoft.com/B2C_1_t20signupsignin\",\r\n        },\r\n        forgotPassword: {\r\n            authority: \"https://t20b2c.b2clogin.com/t20b2c.onmicrosoft.com/b2c_1_reset\",\r\n        },\r\n        editProfile: {\r\n            authority: \"https://t20b2c.b2clogin.com/t20b2c.onmicrosoft.com/b2c_1_edit_profile\"\r\n        }\r\n    },\r\n    authorityDomain: \"t20b2c.b2clogin.com\"\r\n}\r\n\r\n/**\r\n * Configuration object to be passed to MSAL instance on creation. \r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \r\n */\r\nexport const msalConfig = {\r\n    auth: {\r\n        clientId: \"dfc41c62-bb90-4d3b-adc2-b837b9569f71\", // This is the ONLY mandatory field that you need to supply.\r\n        authority: b2cPolicies.authorities.signUpSignIn.authority, // Use a sign-up/sign-in user-flow as a default authority\r\n        knownAuthorities: [b2cPolicies.authorityDomain], // Mark your B2C tenant's domain as trusted.\r\n        redirectUri: \"/\", // Points to window.location.origin. You must register this URI on Azure Portal/App Registration.\r\n        postLogoutRedirectUri: \"/\", // Indicates the page to navigate after logout.\r\n        navigateToLoginRequestUrl: false, // If \"true\", will navigate back to the original request location before processing the auth code response.\r\n    },\r\n    cache: {\r\n        cacheLocation: \"sessionStorage\", // Configures cache location. \"sessionStorage\" is more secure, but \"localStorage\" gives you SSO between tabs.\r\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n    },\r\n    system: {\t\r\n        loggerOptions: {\t\r\n            loggerCallback: (level, message, containsPii) => {\t\r\n                if (containsPii) {\t\t\r\n                    return;\t\t\r\n                }\t\t\r\n                switch (level) {\t\t\r\n                    case LogLevel.Error:\t\t\r\n                        console.error(message);\t\t\r\n                        return;\t\t\r\n                    case LogLevel.Info:\t\t\r\n                        console.info(message);\t\t\r\n                        return;\t\t\r\n                    case LogLevel.Verbose:\t\t\r\n                        console.debug(message);\t\t\r\n                        return;\t\t\r\n                    case LogLevel.Warning:\t\t\r\n                        console.warn(message);\t\t\r\n                        return;\t\t\r\n                }\t\r\n            }\t\r\n        }\t\r\n    }\r\n};\r\n\r\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit: \r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\r\nexport const loginRequest = {\r\n    scopes: []\r\n};\r\n\r\n/**\r\n * An optional silentRequest object can be used to achieve silent SSO\r\n * between applications by providing a \"login_hint\" property.\r\n */\r\nexport const silentRequest = {\r\n  scopes: [\"openid\", \"profile\"],\r\n  loginHint: \"example@domain.net\"\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,qBAAzB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG;EACvBC,KAAK,EAAE;IACHC,YAAY,EAAE,uBADX;IAEHC,cAAc,EAAE,aAFb;IAGHC,WAAW,EAAE;EAHV,CADgB;EAMvBC,WAAW,EAAE;IACTH,YAAY,EAAE;MACVI,SAAS,EAAE;IADD,CADL;IAITH,cAAc,EAAE;MACZG,SAAS,EAAE;IADC,CAJP;IAOTF,WAAW,EAAE;MACTE,SAAS,EAAE;IADF;EAPJ,CANU;EAiBvBC,eAAe,EAAE;AAjBM,CAApB;AAoBP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAG;EACtBC,IAAI,EAAE;IACFC,QAAQ,EAAE,sCADR;IACgD;IAClDJ,SAAS,EAAEN,WAAW,CAACK,WAAZ,CAAwBH,YAAxB,CAAqCI,SAF9C;IAEyD;IAC3DK,gBAAgB,EAAE,CAACX,WAAW,CAACO,eAAb,CAHhB;IAG+C;IACjDK,WAAW,EAAE,GAJX;IAIgB;IAClBC,qBAAqB,EAAE,GALrB;IAK0B;IAC5BC,yBAAyB,EAAE,KANzB,CAMgC;;EANhC,CADgB;EAStBC,KAAK,EAAE;IACHC,aAAa,EAAE,gBADZ;IAC8B;IACjCC,sBAAsB,EAAE,KAFrB,CAE4B;;EAF5B,CATe;EAatBC,MAAM,EAAE;IACJC,aAAa,EAAE;MACXC,cAAc,EAAE,CAACC,KAAD,EAAQC,OAAR,EAAiBC,WAAjB,KAAiC;QAC7C,IAAIA,WAAJ,EAAiB;UACb;QACH;;QACD,QAAQF,KAAR;UACI,KAAKtB,QAAQ,CAACyB,KAAd;YACIC,OAAO,CAACC,KAAR,CAAcJ,OAAd;YACA;;UACJ,KAAKvB,QAAQ,CAAC4B,IAAd;YACIF,OAAO,CAACG,IAAR,CAAaN,OAAb;YACA;;UACJ,KAAKvB,QAAQ,CAAC8B,OAAd;YACIJ,OAAO,CAACK,KAAR,CAAcR,OAAd;YACA;;UACJ,KAAKvB,QAAQ,CAACgC,OAAd;YACIN,OAAO,CAACO,IAAR,CAAaV,OAAb;YACA;QAZR;MAcH;IAnBU;EADX;AAbc,CAAnB;AAsCP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMW,YAAY,GAAG;EACxBC,MAAM,EAAE;AADgB,CAArB;AAIP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BD,MAAM,EAAE,CAAC,QAAD,EAAW,SAAX,CADmB;EAE3BE,SAAS,EAAE;AAFgB,CAAtB"},"metadata":{},"sourceType":"module"}