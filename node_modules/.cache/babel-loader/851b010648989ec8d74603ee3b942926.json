{"ast":null,"code":"/*! @azure/msal-browser v2.16.0 2021-07-22 */\n'use strict';\n\nimport { EventType } from './EventType.js';\nimport { InteractionType, InteractionStatus } from '../utils/BrowserConstants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar EventMessageUtils =\n/** @class */\nfunction () {\n  function EventMessageUtils() {}\n  /**\r\n   * Gets interaction status from event message\r\n   * @param message\r\n   */\n\n\n  EventMessageUtils.getInteractionStatusFromEvent = function (message) {\n    switch (message.eventType) {\n      case EventType.LOGIN_START:\n        return InteractionStatus.Login;\n\n      case EventType.SSO_SILENT_START:\n        return InteractionStatus.SsoSilent;\n\n      case EventType.ACQUIRE_TOKEN_START:\n        if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n          return InteractionStatus.AcquireToken;\n        }\n\n        break;\n\n      case EventType.HANDLE_REDIRECT_START:\n        return InteractionStatus.HandleRedirect;\n\n      case EventType.LOGOUT_START:\n        return InteractionStatus.Logout;\n\n      case EventType.LOGIN_SUCCESS:\n      case EventType.SSO_SILENT_SUCCESS:\n      case EventType.HANDLE_REDIRECT_END:\n      case EventType.LOGIN_FAILURE:\n      case EventType.SSO_SILENT_FAILURE:\n      case EventType.LOGOUT_END:\n        return InteractionStatus.None;\n\n      case EventType.ACQUIRE_TOKEN_SUCCESS:\n      case EventType.ACQUIRE_TOKEN_FAILURE:\n        if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n          return InteractionStatus.None;\n        }\n\n        break;\n    }\n\n    return null;\n  };\n\n  return EventMessageUtils;\n}();\n\nexport { EventMessageUtils };","map":{"version":3,"mappings":";;;;;AAAA;;;;;;;;EA4BA,8BAuCC;;;;;;;EAjCUA,kDAAP,UAAqCC,OAArC,EAA0D;IACtD,QAAQA,OAAO,CAACC,SAAhB;MACI,KAAKC,SAAS,CAACC,WAAf;QACI,OAAOC,iBAAiB,CAACC,KAAzB;;MACJ,KAAKH,SAAS,CAACI,gBAAf;QACI,OAAOF,iBAAiB,CAACG,SAAzB;;MACJ,KAAKL,SAAS,CAACM,mBAAf;QACI,IAAIR,OAAO,CAACS,eAAR,KAA4BC,eAAe,CAACC,QAA5C,IAAwDX,OAAO,CAACS,eAAR,KAA4BC,eAAe,CAACE,KAAxG,EAA+G;UAC3G,OAAOR,iBAAiB,CAACS,YAAzB;QACH;;QACD;;MACJ,KAAKX,SAAS,CAACY,qBAAf;QACI,OAAOV,iBAAiB,CAACW,cAAzB;;MACJ,KAAKb,SAAS,CAACc,YAAf;QACI,OAAOZ,iBAAiB,CAACa,MAAzB;;MACJ,KAAKf,SAAS,CAACgB,aAAf;MACA,KAAKhB,SAAS,CAACiB,kBAAf;MACA,KAAKjB,SAAS,CAACkB,mBAAf;MACA,KAAKlB,SAAS,CAACmB,aAAf;MACA,KAAKnB,SAAS,CAACoB,kBAAf;MACA,KAAKpB,SAAS,CAACqB,UAAf;QACI,OAAOnB,iBAAiB,CAACoB,IAAzB;;MACJ,KAAKtB,SAAS,CAACuB,qBAAf;MACA,KAAKvB,SAAS,CAACwB,qBAAf;QACI,IAAI1B,OAAO,CAACS,eAAR,KAA4BC,eAAe,CAACC,QAA5C,IAAwDX,OAAO,CAACS,eAAR,KAA4BC,eAAe,CAACE,KAAxG,EAA+G;UAC3G,OAAOR,iBAAiB,CAACoB,IAAzB;QACH;;QACD;IA1BR;;IA8BA,OAAO,IAAP;EACH,CAhCM;;EAiCX;AAAC","names":["EventMessageUtils","message","eventType","EventType","LOGIN_START","InteractionStatus","Login","SSO_SILENT_START","SsoSilent","ACQUIRE_TOKEN_START","interactionType","InteractionType","Redirect","Popup","AcquireToken","HANDLE_REDIRECT_START","HandleRedirect","LOGOUT_START","Logout","LOGIN_SUCCESS","SSO_SILENT_SUCCESS","HANDLE_REDIRECT_END","LOGIN_FAILURE","SSO_SILENT_FAILURE","LOGOUT_END","None","ACQUIRE_TOKEN_SUCCESS","ACQUIRE_TOKEN_FAILURE"],"sources":["../../src/event/EventMessage.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthenticationResult, AuthError } from \"@azure/msal-common\";\r\nimport { EventType } from \"./EventType\";\r\nimport { InteractionStatus, InteractionType } from \"../utils/BrowserConstants\";\r\nimport { PopupRequest, RedirectRequest, SilentRequest, SsoSilentRequest, EndSessionRequest } from \"..\";\r\n\r\nexport type EventMessage = {\r\n    eventType: EventType;\r\n    interactionType: InteractionType | null;\r\n    payload: EventPayload;\r\n    error: EventError;\r\n    timestamp: number;\r\n};\r\n\r\nexport type PopupEvent = {\r\n    popupWindow: Window;\r\n};\r\n\r\nexport type EventPayload = PopupRequest | RedirectRequest | SilentRequest | SsoSilentRequest | EndSessionRequest | AuthenticationResult | PopupEvent | null;\r\n\r\nexport type EventError = AuthError | Error | null;\r\n\r\nexport type EventCallbackFunction = (message: EventMessage) => void;\r\n\r\nexport class EventMessageUtils {\r\n\r\n    /**\r\n     * Gets interaction status from event message\r\n     * @param message\r\n     */\r\n    static getInteractionStatusFromEvent(message: EventMessage): InteractionStatus|null {\r\n        switch (message.eventType) {\r\n            case EventType.LOGIN_START:\r\n                return InteractionStatus.Login;\r\n            case EventType.SSO_SILENT_START:\r\n                return InteractionStatus.SsoSilent;\r\n            case EventType.ACQUIRE_TOKEN_START:\r\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\r\n                    return InteractionStatus.AcquireToken;\r\n                }\r\n                break;\r\n            case EventType.HANDLE_REDIRECT_START:\r\n                return InteractionStatus.HandleRedirect;\r\n            case EventType.LOGOUT_START:\r\n                return InteractionStatus.Logout;\r\n            case EventType.LOGIN_SUCCESS:\r\n            case EventType.SSO_SILENT_SUCCESS:\r\n            case EventType.HANDLE_REDIRECT_END:\r\n            case EventType.LOGIN_FAILURE:\r\n            case EventType.SSO_SILENT_FAILURE:\r\n            case EventType.LOGOUT_END:\r\n                return InteractionStatus.None;\r\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\r\n            case EventType.ACQUIRE_TOKEN_FAILURE:\r\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\r\n                    return InteractionStatus.None;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}