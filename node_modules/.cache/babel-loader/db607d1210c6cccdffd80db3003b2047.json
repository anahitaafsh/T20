{"ast":null,"code":"/*! @azure/msal-browser v2.16.0 2021-07-22 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache = new Map();\n  }\n\n  MemoryStorage.prototype.getItem = function (key) {\n    return this.cache.get(key) || null;\n  };\n\n  MemoryStorage.prototype.setItem = function (key, value) {\n    this.cache.set(key, value);\n  };\n\n  MemoryStorage.prototype.removeItem = function (key) {\n    this.cache.delete(key);\n  };\n\n  MemoryStorage.prototype.getKeys = function () {\n    var cacheKeys = [];\n    this.cache.forEach(function (value, key) {\n      cacheKeys.push(key);\n    });\n    return cacheKeys;\n  };\n\n  MemoryStorage.prototype.containsKey = function (key) {\n    return this.cache.has(key);\n  };\n\n  MemoryStorage.prototype.clear = function () {\n    this.cache.clear();\n  };\n\n  return MemoryStorage;\n}();\n\nexport { MemoryStorage };","map":{"version":3,"mappings":";;AAAA;;;;;;;;EAWI;IACI,KAAKA,KAAL,GAAa,IAAIC,GAAJ,EAAb;EACH;;EAEDC,4CAAQC,GAAR,EAAmB;IACf,OAAO,KAAKH,KAAL,CAAWI,GAAX,CAAeD,GAAf,KAAuB,IAA9B;EACH,CAFD;;EAIAD,4CAAQC,GAAR,EAAqBE,KAArB,EAAkC;IAC9B,KAAKL,KAAL,CAAWM,GAAX,CAAeH,GAAf,EAAoBE,KAApB;EACH,CAFD;;EAIAH,+CAAWC,GAAX,EAAsB;IAClB,KAAKH,KAAL,CAAWO,MAAX,CAAkBJ,GAAlB;EACH,CAFD;;EAIAD;IACI,IAAMM,SAAS,GAAa,EAA5B;IACA,KAAKR,KAAL,CAAWS,OAAX,CAAmB,UAACJ,KAAD,EAAgBF,GAAhB,EAA2B;MAC1CK,SAAS,CAACE,IAAV,CAAeP,GAAf;IACH,CAFD;IAGA,OAAOK,SAAP;EACH,CAND;;EAQAN,gDAAYC,GAAZ,EAAuB;IACnB,OAAO,KAAKH,KAAL,CAAWW,GAAX,CAAeR,GAAf,CAAP;EACH,CAFD;;EAIAD;IACI,KAAKF,KAAL,CAAWY,KAAX;EACH,CAFD;;EAGJ;AAAC","names":["cache","Map","MemoryStorage","key","get","value","set","delete","cacheKeys","forEach","push","has","clear"],"sources":["../../src/cache/MemoryStorage.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { IWindowStorage } from \"./IWindowStorage\";\r\n\r\nexport class MemoryStorage implements IWindowStorage {\r\n\r\n    private cache: Map<string, string>;\r\n\r\n    constructor() {\r\n        this.cache = new Map<string, string>();\r\n    }\r\n\r\n    getItem(key: string): string | null {\r\n        return this.cache.get(key) || null;\r\n    }\r\n\r\n    setItem(key: string, value: string): void {\r\n        this.cache.set(key, value);\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        this.cache.delete(key);\r\n    }\r\n\r\n    getKeys(): string[] {\r\n        const cacheKeys: string[] = [];\r\n        this.cache.forEach((value: string, key: string) => {\r\n            cacheKeys.push(key);\r\n        });\r\n        return cacheKeys;\r\n    }\r\n\r\n    containsKey(key: string): boolean {\r\n        return this.cache.has(key);\r\n    }\r\n\r\n    clear() :void {\r\n        this.cache.clear();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}