{"ast":null,"code":"/*! @azure/msal-browser v2.29.0 2022-10-03 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { AuthError } from '@azure/msal-common';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\n\nvar BrowserConfigurationAuthErrorMessage = {\n  redirectUriNotSet: {\n    code: \"redirect_uri_empty\",\n    desc: \"A redirect URI is required for all calls, and none has been set.\"\n  },\n  postLogoutUriNotSet: {\n    code: \"post_logout_uri_empty\",\n    desc: \"A post logout redirect has not been set.\"\n  },\n  storageNotSupportedError: {\n    code: \"storage_not_supported\",\n    desc: \"Given storage configuration option was not supported.\"\n  },\n  noRedirectCallbacksSet: {\n    code: \"no_redirect_callbacks\",\n    desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  invalidCallbackObject: {\n    code: \"invalid_callback_object\",\n    desc: \"The object passed for the callback was invalid. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  stubPcaInstanceCalled: {\n    code: \"stubbed_public_client_application_called\",\n    desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\"\n  },\n  inMemRedirectUnavailable: {\n    code: \"in_mem_redirect_unavailable\",\n    desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\"\n  },\n  entropyNotProvided: {\n    code: \"entropy_not_provided\",\n    desc: \"The available browser crypto interface requires entropy set via system.cryptoOptions.entropy configuration option.\"\n  }\n};\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\n\nvar BrowserConfigurationAuthError =\n/** @class */\nfunction (_super) {\n  __extends(BrowserConfigurationAuthError, _super);\n\n  function BrowserConfigurationAuthError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n\n    _this.name = \"BrowserConfigurationAuthError\";\n    Object.setPrototypeOf(_this, BrowserConfigurationAuthError.prototype);\n    return _this;\n  }\n  /**\r\n   * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n   */\n\n\n  BrowserConfigurationAuthError.createRedirectUriEmptyError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code, BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\n  };\n  /**\r\n   * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n   */\n\n\n  BrowserConfigurationAuthError.createPostLogoutRedirectUriEmptyError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code, BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\n  };\n  /**\r\n   * Creates error thrown when given storage location is not supported.\r\n   * @param givenStorageLocation\r\n   */\n\n\n  BrowserConfigurationAuthError.createStorageNotSupportedError = function (givenStorageLocation) {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc + \" Given Location: \" + givenStorageLocation);\n  };\n  /**\r\n   * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\r\n   */\n\n\n  BrowserConfigurationAuthError.createRedirectCallbacksNotSetError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\n  };\n  /**\r\n   * Creates error thrown when the stub instance of PublicClientApplication is called.\r\n   */\n\n\n  BrowserConfigurationAuthError.createStubPcaInstanceCalledError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code, BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc);\n  };\n  /*\r\n   * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\r\n   */\n\n\n  BrowserConfigurationAuthError.createInMemoryRedirectUnavailableError = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code, BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc);\n  };\n  /**\r\n   * Creates an error thrown when a crypto interface that requires entropy is initialized without entropy\r\n   */\n\n\n  BrowserConfigurationAuthError.createEntropyNotProvided = function () {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.entropyNotProvided.code, BrowserConfigurationAuthErrorMessage.entropyNotProvided.desc);\n  };\n\n  return BrowserConfigurationAuthError;\n}(AuthError);\n\nexport { BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage };","map":{"version":3,"mappings":";;;;;AAAA;;;;;AAOA;;;;IAGaA,oCAAoC,GAAG;EAChDC,iBAAiB,EAAE;IACfC,IAAI,EAAE,oBADS;IAEfC,IAAI,EAAE;EAFS,CAD6B;EAKhDC,mBAAmB,EAAE;IACjBF,IAAI,EAAE,uBADW;IAEjBC,IAAI,EAAE;EAFW,CAL2B;EAShDE,wBAAwB,EAAE;IACtBH,IAAI,EAAE,uBADgB;IAEtBC,IAAI,EAAE;EAFgB,CATsB;EAahDG,sBAAsB,EAAE;IACpBJ,IAAI,EAAE,uBADc;IAEpBC,IAAI,EAAE,wIACF;EAHgB,CAbwB;EAkBhDI,qBAAqB,EAAE;IACnBL,IAAI,EAAE,yBADa;IAEnBC,IAAI,EAAE,qDACJ;EAHiB,CAlByB;EAuBhDK,qBAAqB,EAAE;IACnBN,IAAI,EAAE,0CADa;IAEnBC,IAAI,EAAE;EAFa,CAvByB;EA2BhDM,wBAAwB,EAAE;IACtBP,IAAI,EAAE,6BADgB;IAEtBC,IAAI,EAAE;EAFgB,CA3BsB;EA+BhDO,kBAAkB,EAAE;IAChBR,IAAI,EAAE,sBADU;IAEhBC,IAAI,EAAE;EAFU;AA/B4B;AAqCpD;;;;;;;EAGmDQ;;EAE/C,uCAAYC,SAAZ,EAA+BC,YAA/B,EAAoD;IAApD,YACIC,kBAAMF,SAAN,EAAiBC,YAAjB,KAA8B,IADlC;;IAEIE,KAAI,CAACC,IAAL,GAAY,+BAAZ;IAEAC,MAAM,CAACC,cAAP,CAAsBH,KAAtB,EAA4BI,6BAA6B,CAACC,SAA1D;;EACH;;;;;;EAKMD,4DAAP;IACI,OAAO,IAAIA,6BAAJ,CAAkCnB,oCAAoC,CAACC,iBAArC,CAAuDC,IAAzF,EACHF,oCAAoC,CAACC,iBAArC,CAAuDE,IADpD,CAAP;EAEH,CAHM;;;;;;EAQAgB,sEAAP;IACI,OAAO,IAAIA,6BAAJ,CAAkCnB,oCAAoC,CAACI,mBAArC,CAAyDF,IAA3F,EACHF,oCAAoC,CAACI,mBAArC,CAAyDD,IADtD,CAAP;EAEH,CAHM;;;;;;;EASAgB,+DAAP,UAAsCE,oBAAtC,EAAkE;IAC9D,OAAO,IAAIF,6BAAJ,CAAkCnB,oCAAoC,CAACK,wBAArC,CAA8DH,IAAhG,EAAyGF,oCAAoC,CAACK,wBAArC,CAA8DF,IAA9D,GAAkE,mBAAlE,GAAsFkB,oBAA/L,CAAP;EACH,CAFM;;;;;;EAOAF,mEAAP;IACI,OAAO,IAAIA,6BAAJ,CAAkCnB,oCAAoC,CAACM,sBAArC,CAA4DJ,IAA9F,EACHF,oCAAoC,CAACM,sBAArC,CAA4DH,IADzD,CAAP;EAEH,CAHM;;;;;;EAQAgB,iEAAP;IACI,OAAO,IAAIA,6BAAJ,CAAkCnB,oCAAoC,CAACQ,qBAArC,CAA2DN,IAA7F,EACHF,oCAAoC,CAACQ,qBAArC,CAA2DL,IADxD,CAAP;EAEH,CAHM;;;;;;EAQAgB,uEAAP;IACI,OAAO,IAAIA,6BAAJ,CAAkCnB,oCAAoC,CAACS,wBAArC,CAA8DP,IAAhG,EAAsGF,oCAAoC,CAACS,wBAArC,CAA8DN,IAApK,CAAP;EACH,CAFM;;;;;;EAOAgB,yDAAP;IACI,OAAO,IAAIA,6BAAJ,CAAkCnB,oCAAoC,CAACU,kBAArC,CAAwDR,IAA1F,EAAgGF,oCAAoC,CAACU,kBAArC,CAAwDP,IAAxJ,CAAP;EACH,CAFM;;EAGX;AA9DA,EAAmDmB","names":["BrowserConfigurationAuthErrorMessage","redirectUriNotSet","code","desc","postLogoutUriNotSet","storageNotSupportedError","noRedirectCallbacksSet","invalidCallbackObject","stubPcaInstanceCalled","inMemRedirectUnavailable","entropyNotProvided","__extends","errorCode","errorMessage","_super","_this","name","Object","setPrototypeOf","BrowserConfigurationAuthError","prototype","givenStorageLocation","AuthError"],"sources":["../../src/error/BrowserConfigurationAuthError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserConfigurationAuthErrorMessage = {\n    redirectUriNotSet: {\n        code: \"redirect_uri_empty\",\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\n    },\n    postLogoutUriNotSet: {\n        code: \"post_logout_uri_empty\",\n        desc: \"A post logout redirect has not been set.\"\n    },\n    storageNotSupportedError: {\n        code: \"storage_not_supported\",\n        desc: \"Given storage configuration option was not supported.\"\n    },\n    noRedirectCallbacksSet: {\n        code: \"no_redirect_callbacks\",\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    invalidCallbackObject: {\n        code: \"invalid_callback_object\",\n        desc: \"The object passed for the callback was invalid. \" +\n          \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    stubPcaInstanceCalled: {\n        code: \"stubbed_public_client_application_called\",\n        desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\"\n    },\n    inMemRedirectUnavailable: {\n        code: \"in_mem_redirect_unavailable\",\n        desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\"\n    },\n    entropyNotProvided: {\n        code: \"entropy_not_provided\",\n        desc: \"The available browser crypto interface requires entropy set via system.cryptoOptions.entropy configuration option.\"\n    }\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserConfigurationAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\n     */\n    static createRedirectUriEmptyError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code,\n            BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\n     */\n    static createPostLogoutRedirectUriEmptyError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code,\n            BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\n    }\n\n    /**\n     * Creates error thrown when given storage location is not supported.\n     * @param givenStorageLocation \n     */\n    static createStorageNotSupportedError(givenStorageLocation: string): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`);\n    }\n\n    /**\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\n     */\n    static createRedirectCallbacksNotSetError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, \n            BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\n    }\n\n    /**\n     * Creates error thrown when the stub instance of PublicClientApplication is called.\n     */\n    static createStubPcaInstanceCalledError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code,\n            BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc);\n    }\n\n    /*\n     * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\n     */\n    static createInMemoryRedirectUnavailableError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code, BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc);\n    }\n    \n    /**\n     * Creates an error thrown when a crypto interface that requires entropy is initialized without entropy\n     */\n    static createEntropyNotProvided(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.entropyNotProvided.code, BrowserConfigurationAuthErrorMessage.entropyNotProvided.desc);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}